// <auto-generated />
using System;
using AspNetCoreBank.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AspNetCoreBank.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190818151717_CoreBank")]
    partial class CoreBank
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("AspNetCoreBank.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<int>("Document");

                    b.Property<string>("Lastname")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2019, 8, 18, 12, 17, 17, 33, DateTimeKind.Local).AddTicks(7914),
                            Document = 95699120,
                            Lastname = "Umanchuk",
                            Name = "Jury"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2019, 8, 18, 12, 17, 17, 34, DateTimeKind.Local).AddTicks(6406),
                            Document = 95598062,
                            Lastname = "Perez",
                            Name = "Linda"
                        });
                });

            modelBuilder.Entity("AspNetCoreBank.Models.Movements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("MovementsTypeId");

                    b.Property<int>("ProductId");

                    b.Property<int?>("ProductsId");

                    b.Property<decimal>("amount");

                    b.Property<DateTime>("date");

                    b.Property<int>("status");

                    b.HasKey("Id");

                    b.HasIndex("MovementsTypeId");

                    b.HasIndex("ProductsId");

                    b.ToTable("Movements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MovementsTypeId = 1,
                            ProductId = 1,
                            amount = 150m,
                            date = new DateTime(2019, 8, 18, 12, 17, 17, 36, DateTimeKind.Local).AddTicks(265),
                            status = 1
                        },
                        new
                        {
                            Id = 2,
                            MovementsTypeId = 2,
                            ProductId = 1,
                            amount = 100m,
                            date = new DateTime(2019, 8, 18, 12, 17, 17, 36, DateTimeKind.Local).AddTicks(1103),
                            status = 1
                        });
                });

            modelBuilder.Entity("AspNetCoreBank.Models.MovementsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Movements_type");

                    b.Property<string>("name");

                    b.Property<int>("status");

                    b.HasKey("Id");

                    b.ToTable("MovementsType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Movements_type = 1,
                            name = "Deposito",
                            status = 1
                        },
                        new
                        {
                            Id = 2,
                            Movements_type = 2,
                            name = "Extracción",
                            status = 1
                        });
                });

            modelBuilder.Entity("AspNetCoreBank.Models.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Product_type");

                    b.Property<string>("name");

                    b.Property<int>("status");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Product_type = 1,
                            name = "Cuenta Ahorro",
                            status = 1
                        },
                        new
                        {
                            Id = 2,
                            Product_type = 1,
                            name = "Cuenta Corriente",
                            status = 2
                        },
                        new
                        {
                            Id = 3,
                            Product_type = 1,
                            name = "Cuenta en Dolares",
                            status = 2
                        },
                        new
                        {
                            Id = 4,
                            Product_type = 2,
                            name = "Prestamo Personal",
                            status = 3
                        });
                });

            modelBuilder.Entity("AspNetCoreBank.Models.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClientId");

                    b.Property<DateTime?>("Closing_date");

                    b.Property<DateTime>("Opening_date");

                    b.Property<int?>("ProductTypeId");

                    b.Property<decimal>("current_balance");

                    b.Property<int>("status");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            Opening_date = new DateTime(2019, 8, 18, 12, 17, 17, 35, DateTimeKind.Local).AddTicks(4839),
                            ProductTypeId = 1,
                            current_balance = 150m,
                            status = 1
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 1,
                            Opening_date = new DateTime(2019, 8, 18, 12, 17, 17, 35, DateTimeKind.Local).AddTicks(5789),
                            ProductTypeId = 2,
                            current_balance = 100m,
                            status = 1
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 2,
                            Opening_date = new DateTime(2019, 8, 18, 12, 17, 17, 35, DateTimeKind.Local).AddTicks(5801),
                            ProductTypeId = 1,
                            current_balance = 500m,
                            status = 1
                        });
                });

            modelBuilder.Entity("AspNetCoreBank.Models.Movements", b =>
                {
                    b.HasOne("AspNetCoreBank.Models.MovementsType", "MovementsType")
                        .WithMany()
                        .HasForeignKey("MovementsTypeId");

                    b.HasOne("AspNetCoreBank.Models.Products", "Products")
                        .WithMany()
                        .HasForeignKey("ProductsId");
                });

            modelBuilder.Entity("AspNetCoreBank.Models.Products", b =>
                {
                    b.HasOne("AspNetCoreBank.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AspNetCoreBank.Models.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
